---

- name: Perform a dist upgrade for Debian machine
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
    cache_valid_time: 14400
  become: true

- name: Ensure FUSE is available on Ubuntu machine
  when: ansible_distribution == 'Ubuntu'
  become: true
  block:
    - name: Set FUSE package fact
      ansible.builtin.set_fact:
        fuse_image: "{{ 'libfuse2t64' if (ansible_distribution_major_version | int >= 24) else 'libfuse2' }}"

    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Ensure universe repository exists
      ansible.builtin.command: add-apt-repository universe --yes --update
      when: fuse_image not in ansible_facts.packages
      check_mode: false
      changed_when: false
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Ensure FUSE is installed on the machine
      ansible.builtin.apt:
        name: "{{ fuse_image }}"
        state: present
        update_cache: true
      when: fuse_image not in ansible_facts.packages

    - name: Ensure fuse is installed (Ubuntu <= 21.10)
      ansible.builtin.apt:
        name: fuse
        state: present
        force_apt_get: true
      when: ansible_distribution_major_version <= '21.10'

    - name: Load fuse module (Ubuntu <= 21.10)
      community.general.modprobe:
        name: fuse
        state: present
      when: ansible_distribution_major_version <= '21.10'

    - name: Ensure fuse group exists (Ubuntu <= 21.10)
      ansible.builtin.group:
        name: fuse
        state: present
      when: ansible_distribution_major_version <= '21.10'

    - name: Add fuse group to current user
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        state: present
        append: true
        groups:
          - fuse
      become_user: "{{ ansible_user_id }}"
      when: ansible_distribution_major_version <= '21.10'

- name: Ensure git is installed
  ansible.builtin.apt:
    name: git
    state: present
  become: true

- name: Ensure packages in the list for Debian
  ansible.builtin.apt:
    name: "{{ apt_installed_packages }}"
    state: present
  become: true
  when: apt_installed_packages | length > 0

- name: Disable packages in the list for Debian
  ansible.builtin.apt:
    name: "{{ apt_disabled_packages }}"
    state: absent
  become: true
  when: apt_disabled_packages | length > 0

- name: Ensure wslu is installed (Ubuntu)
  when: ansible_distribution == 'Ubuntu'
  become: true
  block:
    - name: Add wslu apt repository
      ansible.builtin.apt_repository:
        repo: ppa:wslutilities/wslu
        state: present
        update_cache: true

    - name: Install wslu using apt
      ansible.builtin.apt:
        name: wslu
        state: present
        update_cache: true

- name: Ensure wslu is installed (Debian)
  when: ansible_distribution == 'Debian'
  become: true
  block:
    - name: Ensure prerequisites packages
      ansible.builtin.apt:
        pkg:
          - gnupg2
          - apt-transport-https
        state: present
        force_apt_get: true

    - name: Add wslu apt repository key
      ansible.builtin.get_url:
        url: https://pkg.wslutiliti.es/public.key
        dest: /usr/share/keyrings/wslu-archive-keyring.pgp
        force: true
        mode: "0644"

    - name: Add wslu apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/wslu-archive-keyring.pgp] https://pkg.wslutiliti.es/debian {{ ansible_distribution_release }} main"
        filename: wslu
        state: present

    - name: Install wslu via apt
      ansible.builtin.apt:
        name: wslu
        state: present
        update_cache: true
